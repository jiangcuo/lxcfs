From a46b7b6978867101e79db1e1a51d30f2a02176ec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Thu, 5 Nov 2020 15:43:01 -0500
Subject: [PATCH lxcfs 7/8] swap: Make /proc/swaps match /proc/meminfo
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 src/proc_fuse.c | 47 ++++++++++++++++++++++++++++-------------------
 1 file changed, 28 insertions(+), 19 deletions(-)

diff --git a/src/proc_fuse.c b/src/proc_fuse.c
index 4c555ec..fc69789 100644
--- a/src/proc_fuse.c
+++ b/src/proc_fuse.c
@@ -325,11 +325,16 @@ static int proc_swaps_read(char *buf, size_t size, off_t offset,
 	bool wants_swap = opts && !opts->swap_off && liblxcfs_can_use_swap();
 	struct file_info *d = INTTYPE_TO_PTR(fi->fh);
 	uint64_t memswlimit = 0, memlimit = 0, memusage = 0, memswusage = 0,
-		 swtotal = 0, swfree = 0, swusage = 0, memswpriority = 1;
+		 swtotal = 0, swfree = 0, swusage = 0, memswpriority = 1
+		 hostswtotal = 0, hostswfree = 0;
 	ssize_t total_len = 0;
 	ssize_t l = 0;
 	char *cache = d->buf;
 	int ret;
+	__do_free char *line = NULL;
+	__do_free void *fopen_cache = NULL;
+	__do_fclose FILE *f = NULL;
+	size_t linelen = 0;
 
 	if (offset) {
 		int left;
@@ -390,28 +395,32 @@ static int proc_swaps_read(char *buf, size_t size, off_t offset,
 
 	total_len = snprintf(d->buf, d->size, "Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n");
 
-	/* When no mem + swap limit is specified or swapaccount=0*/
-	if (!memswlimit) {
-		__do_free char *line = NULL;
-		__do_free void *fopen_cache = NULL;
-		__do_fclose FILE *f = NULL;
-		size_t linelen = 0;
+	/* Read host total and free values */
+	f = fopen_cached("/proc/meminfo", "re", &fopen_cache);
+	if (!f)
+		return 0;
 
-		f = fopen_cached("/proc/meminfo", "re", &fopen_cache);
-		if (!f)
-			return 0;
+	while (getline(&line, &linelen, f) != -1) {
+		if (startswith(line, "SwapTotal:"))
+			sscanf(line, "SwapTotal:      %8" PRIu64 " kB", &hostswtotal);
+		else if (startswith(line, "SwapFree:"))
+			sscanf(line, "SwapFree:      %8" PRIu64 " kB", &hostswfree);
+	}
 
-		while (getline(&line, &linelen, f) != -1) {
-			if (startswith(line, "SwapTotal:"))
-				sscanf(line, "SwapTotal:      %8" PRIu64 " kB", &swtotal);
-			else if (startswith(line, "SwapFree:"))
-				sscanf(line, "SwapFree:      %8" PRIu64 " kB", &swfree);
+	if (wants_swap) {
+		/* The total amount of swap is always reported to be the
+		   lesser of the RAM+SWAP limit or the SWAP device size.
+		   This is because the kernel can swap as much as it
+		   wants and not only up to swtotal. */
+		swtotal = memlimit / 1024 + swtotal;
+		if (hostswtotal < swtotal) {
+			swtotal = hostswtotal;
 		}
-	}
 
-	// When swappiness is 0, pretend we can't swap.
-	if (memswpriority == 0) {
-		swtotal = swusage;
+		/* When swappiness is 0, pretend we can't swap. */
+		if (memswpriority == 0) {
+			swtotal = swusage;
+		}
 	}
 
 	if (swtotal > 0) {
-- 
2.20.1

